{"version":3,"sources":["components/Header.jsx","components/HomePage/HomePage.jsx","components/PersonName/PersonName.jsx","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","components/PeopleContext.jsx","api/request.js","components/PeoplePage/PeoplePage.jsx","components/PageNotFound.jsx","components/NewPerson/NewPerson.jsx","App.jsx","index.jsx"],"names":["Header","className","to","navData","isActive","HomePage","PersonName","personData","search","useLocation","selector","slug","smooth","scrollOptions","block","pathname","classNames","sex","name","PersonRow","mother","father","person","selectedSlug","useParams","location","sortBy","URLSearchParams","get","id","sorted_column","born","died","motherName","fatherName","PeopleTable","sortedPeople","people","navigate","useNavigate","searchParams","sortOrder","sort","a","b","localeCompare","map","column","sortBy__item_sort_asc","toLowerCase","sortBy__item_sort_desc","onClick","set","toString","handleSortBy","find","value","PeopleContext","React","createContext","setPeople","PeopleProvider","children","useState","useEffect","fetch","then","response","json","result","contextValue","useMemo","Provider","PeoplePage","filteredPeople","useContext","appliedQuery","query","setQuery","applyQuery","useCallback","debounce","newQuery","delete","filter","includes","onChange","event","target","type","placeholder","PageNotFound","NewPerson","useForm","mode","register","handleSubmit","getValues","reset","formState","errors","isValid","values","currentYear","Date","getFullYear","selectParents","onSubmit","data","split","join","newPerson","pattern","message","required","min","max","disabled","hidden","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78d160fc.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <div className=\"navbar is-dark has-shadow\">\n    <nav className=\"navbar-brand\">\n      <NavLink\n        to=\"\"\n        className={navData => `navbar-item ${navData.isActive ? 'active' : ''}`}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"people\"\n        className={navData => `navbar-item ${navData.isActive ? 'active' : ''}`}\n      >\n        People\n      </NavLink>\n    </nav>\n  </div>\n);\n","import React from 'react';\nimport './HomePage.scss';\n\nexport const HomePage = () => (\n  <div className=\"homepage__container\">\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport { Link, useLocation } from 'react-router-dom';\nimport './PersonName.scss';\nimport classNames from 'classnames';\n\nexport const PersonName = ({ personData }) => {\n  const { search } = useLocation();\n\n  return (\n    <ScrollIntoView\n      selector={`#${personData.slug}`}\n      smooth\n      scrollOptions={{\n        block: 'center',\n      }}\n    >\n      <Link\n        to={{\n          pathname: `/people/${personData.slug}`,\n          search,\n        }}\n        className={classNames(personData.sex === 'm' ? 'male' : 'female')}\n      >\n        {personData.name}\n      </Link>\n    </ScrollIntoView>\n  );\n};\n\nPersonName.propTypes = {\n  personData: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    motherName: PropTypes.string,\n    fatherName: PropTypes.string,\n    slug: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PersonRow.scss';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { PersonName } from '../PersonName/PersonName';\n\nexport const PersonRow = ({ mother, father, ...person }) => {\n  const { selectedSlug } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n\n  return (\n    <tr\n      key={person.slug}\n      id={person.slug}\n      className={classNames(\n        'Person',\n        { 'person-selected': person.slug === selectedSlug },\n      )}\n    >\n      <>\n        <td className={classNames('person-name',\n          { sorted_column: sortBy === 'name' })}\n        >\n          <PersonName personData={person} />\n        </td>\n        <td className={classNames('person-sex',\n          { sorted_column: sortBy === 'sex' })}\n        >\n          {person.sex === 'f' ? 'Female' : 'Male'}\n        </td>\n        <td className={classNames('person-born',\n          { sorted_column: sortBy === 'born' })}\n        >\n          {person.born}\n        </td>\n        <td className={classNames('person-died',\n          { sorted_column: sortBy === 'died' })}\n        >\n          {person.died}\n        </td>\n        <td className={classNames('person-mother',\n          { 'not-found': mother === 'no data' })}\n        >\n          {mother !== 'no data'\n            ? (<PersonName personData={mother} />)\n            : person.motherName || 'No data'\n        }\n        </td>\n        <td className={classNames('person-father',\n          { 'not-found': father === 'no data' })}\n        >\n          {father !== 'no data'\n            ? (<PersonName personData={father} />)\n            : person.fatherName || 'No data'\n        }\n        </td>\n      </>\n    </tr>\n  );\n};\n\nPersonRow.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    motherName: PropTypes.string,\n    fatherName: PropTypes.string,\n    slug: PropTypes.string,\n  }).isRequired,\n  mother: PropTypes.oneOfType([\n    PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n      born: PropTypes.number,\n      died: PropTypes.number,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n      slug: PropTypes.string,\n    }),\n    PropTypes.string,\n  ]).isRequired,\n  father: PropTypes.oneOfType([\n    PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n      born: PropTypes.number,\n      died: PropTypes.number,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n      slug: PropTypes.string,\n    }),\n    PropTypes.string,\n  ]).isRequired,\n};\n","import './PeopleTable.scss';\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nexport const PeopleTable = ({ people }) => {\n  let sortedPeople;\n  const columnsNames = ['Name', 'Sex', 'Born', 'Died'];\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const handleSortBy = (column) => {\n    searchParams.set('sortBy', column);\n    searchParams.set('sortOrder', sortOrder !== 'asc' ? 'asc' : 'desc');\n\n    navigate(`?${searchParams.toString()}`);\n  };\n\n  if (sortBy) {\n    sortedPeople = people.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n        case 'sex':\n          switch (sortOrder) {\n            case 'asc':\n              return a[sortBy].localeCompare(b[sortBy]);\n            default:\n              return b[sortBy].localeCompare(a[sortBy]);\n          }\n\n        case 'born':\n        case 'died':\n          switch (sortOrder) {\n            case 'asc':\n              return a[sortBy] - b[sortBy];\n            default:\n              return b[sortBy] - a[sortBy];\n          }\n\n        default:\n          return 0;\n      }\n    });\n  } else {\n    sortedPeople = people;\n  }\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"table__headers\">\n          <tr>\n            {columnsNames.map(column => (\n              <th\n                className={classNames('sortBy__item',\n                  { sortBy__item_sort_asc: sortOrder === 'asc'\n                    && sortBy === column.toLowerCase(),\n                  sortBy__item_sort_desc: sortOrder === 'desc'\n                    && sortBy === column.toLowerCase(),\n                  sorted_column: sortBy === column.toLowerCase() })}\n                onClick={() => handleSortBy(column.toLowerCase())}\n              >\n                {column}\n              </th>\n            ))}\n            <th className=\"\">Mother</th>\n            <th className=\"\">Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPeople.map(person => (\n            <PersonRow\n              {...person}\n              mother={people\n                .find(value => person.motherName === value.name) || 'no data'}\n              father={people\n                .find(value => person.fatherName === value.name) || 'no data'}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n      born: PropTypes.number,\n      died: PropTypes.number,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n      slug: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as request from '../api/request';\n\nexport const PeopleContext = React.createContext({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleProvider = ({ children }) => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    request.getPeople()\n      .then(result => setPeople(result));\n  }, []);\n\n  const contextValue = useMemo(() => ({\n    people,\n    setPeople,\n  }), [people]);\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n\nPeopleProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(url).then(response => response.json());\n","import React, { useCallback, useContext, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport './PeoplePage.scss';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\n\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { PeopleContext } from '../PeopleContext';\n\nexport const PeoplePage = () => {\n  const { people } = useContext(PeopleContext);\n  let filteredPeople;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigate(`?${searchParams.toString()}`);\n    }, 500), [],\n  );\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value.toLowerCase());\n  };\n\n  if (appliedQuery) {\n    filteredPeople = people\n      .filter(person => (\n        person.name !== null\n        && person.motherName !== null\n        && person.fatherName !== null\n      )\n        && (person.name\n          .toLowerCase().includes(appliedQuery)\n          || person.motherName\n            .toLowerCase().includes(appliedQuery)\n          || person.fatherName\n            .toLowerCase().includes(appliedQuery)));\n  } else {\n    filteredPeople = people;\n  }\n\n  return (\n    <>\n      <div className=\"title__container\">\n        <h1 className=\"title\">People page</h1>\n      </div>\n      <div className=\"input__container\">\n        <label className=\"label\" id=\"name\">\n          <input\n            data-cy=\"filterInput\"\n            value={query}\n            onChange={handleQueryChange}\n            className=\"input is-normal\"\n            type=\"text\"\n            name=\"input\"\n            placeholder=\"Enter name\"\n          />\n        </label>\n        <div>\n          <button type=\"button\" className=\"button button-add\">\n            <Link\n              to=\"/people/new\"\n            >\n              Add person\n            </Link>\n          </button>\n        </div>\n      </div>\n      <PeopleTable people={filteredPeople} />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound = () => (\n  <div>\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { PeopleContext } from '../PeopleContext';\nimport './NewPerson.scss';\n\nexport const NewPerson = () => {\n  const navigate = useNavigate();\n  const { people, setPeople } = useContext(PeopleContext);\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onChange' });\n\n  const values = getValues();\n  const currentYear = new Date().getFullYear();\n\n  const selectParents = sex => people.filter(person => (\n    person.sex === sex\n    && person.died >= +values.born\n    && person.born + 18 < +values.born\n  ));\n\n  const submitForm = (data) => {\n    const slug = `${data.name.toLowerCase().split(' ').join('-')}-${data.born}`;\n    const newPerson = {\n      ...data,\n      slug,\n    };\n\n    setPeople([...people, newPerson]);\n\n    navigate('/people');\n\n    reset();\n  };\n\n  return (\n    <>\n      <div className=\"add-people-container\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Add new person</h1>\n        </div>\n        <div className=\"box\">\n          <form onSubmit={handleSubmit(submitForm)}>\n            <div className=\"field\">\n              <label className=\"label\">\n                <div className=\"control\">\n                  <input\n                    className={classNames(\n                      'input',\n                      {\n                        'is-success': values.name,\n                        'is-danger': errors.name,\n                      },\n                    )}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    {...register('name',\n                      { pattern: { value: /^[A-Za-z ]+$/i,\n                        message:\n                      'Name should contains only of letters and spaces' },\n                      required: true })}\n                  />\n                </div>\n              </label>\n              {errors.name\n              && <p className=\"help is-danger\">{errors.name.message}</p>}\n            </div>\n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <label className=\"radio\">\n                  <input\n                    className=\"input-radio\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"m\"\n                    {...register('sex', { required: true })}\n                  />\n                  Male\n                </label>\n                <label className=\"radio\">\n                  <input\n                    className=\"input-radio\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"f\"\n                    {...register('sex', { required: true })}\n                  />\n                  Female\n                </label>\n              </div>\n            </div>\n            <div className=\"field is-narrow\">\n              <label className=\"label\">\n                <div className=\"control\">\n                  <input\n                    className={classNames(\n                      'input',\n                      {\n                        'is-success': values.born,\n                        'is-danger': errors.born,\n                      },\n                    )}\n                    type=\"number\"\n                    placeholder=\"Born\"\n                    {...register('born', { min: {\n                      value: 1400,\n                      message: 'Born date should be more than 1400 year',\n                    },\n                    max: {\n                      value: currentYear,\n                      message: 'Born date cannot be more than current year',\n                    },\n                    required: true })}\n                  />\n                </div>\n              </label>\n              <label className=\"label\">\n                <div className=\"control\">\n                  <input\n                    className={classNames(\n                      'input',\n                      {\n                        'is-success': values.died,\n                        'is-danger': errors.died,\n                      },\n                    )}\n                    type=\"number\"\n                    placeholder=\"Died\"\n                    disabled={!values.born}\n                    {...register('died', { min: {\n                      value: values.born,\n                      message: 'Died date cannot be less than born year',\n                    },\n                    max: {\n                      value: +values.born + 150,\n                      message: 'Died date cannot be more than current year',\n                    },\n                    required: true })}\n                  />\n                </div>\n              </label>\n              {errors.born\n              && (\n                <p className=\"help is-danger\">{errors.born.message}</p>\n              )}\n              {errors.died\n              && (\n                <p className=\"help is-danger\">{errors.died.message}</p>\n              )}\n            </div>\n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <div className=\"select\">\n                  <select\n                    disabled={!values.born}\n                    {...register('motherName')}\n                  >\n                    <option hidden value=\"No data\">Select mother</option>\n                    {selectParents && selectParents('m').map(person => (\n                      person.motherName\n            && <option key={person.slug}>{person.motherName}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"control\">\n                <div className=\"select\">\n                  <select\n                    disabled={!values.born}\n                    {...register('fatherName')}\n                  >\n                    <option hidden value=\"No data\">Select father</option>\n                    {selectParents && selectParents('f').map(person => (\n                      person.fatherName\n            && <option key={person.slug}>{person.fatherName}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"button button-submit\"\n              disabled={!isValid}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport 'bulma';\nimport React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { NewPerson } from './components/NewPerson/NewPerson';\nimport { PeopleProvider } from './components/PeopleContext';\n\nconst App = () => (\n  <PeopleProvider>\n    <div className=\"App\">\n\n      <Header />\n\n      <Routes>\n        <Route path=\"\" element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":selectedSlug\" element={<PeoplePage />} />\n        </Route>\n        <Route\n          path=\"people/new\"\n          element={<NewPerson />}\n        />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n\n    </div>\n  </PeopleProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}